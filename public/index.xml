<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title></title>
    <link>http://localhost:1313/</link>
    <description>Recent content on </description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 14 Sep 2024 15:18:03 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Game</title>
      <link>http://localhost:1313/game/game/</link>
      <pubDate>Sat, 14 Sep 2024 15:18:03 +0000</pubDate>
      <guid>http://localhost:1313/game/game/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xA;&lt;html lang=&#34;en&#34;&gt;&#xA;&lt;head&gt;&#xA;    &lt;meta charset=&#34;UTF-8&#34;&gt;&#xA;    &lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1.0&#34;&gt;&#xA;    &lt;title&gt;Snake Game&lt;/title&gt;&#xA;    &lt;style&gt;&#xA;        canvas {&#xA;            display: block;&#xA;            margin: 0 auto;&#xA;            background-color: #2E2D30;&#xA;        }&#xA;    &lt;/style&gt;&#xA;&lt;/head&gt;&#xA;&lt;body&gt;&#xA;    &lt;canvas id=&#34;gameCanvas&#34; width=&#34;600&#34; height=&#34;600&#34;&gt;&lt;/canvas&gt;&#xA;    &lt;script&gt;&#xA;        const canvas = document.getElementById(&#39;gameCanvas&#39;);&#xA;        const ctx = canvas.getContext(&#39;2d&#39;);&#xA;        const w = canvas.width;&#xA;        const h = canvas.height;&#xA;&lt;pre&gt;&lt;code&gt;    let start = false;&#xA;    let lose = false;&#xA;    let d = [0, 20, 20, 0, 0, -20, -20, 0];  // directions: down, right, up, left&#xA;    let snake = [w / 2, h / 2, 0, -20, w / 2, h / 2 + 20, 0, -20, w / 2, h / 2 + 40, 0, -20, w / 2, h / 2 + 60, 0, -20];&#xA;    let movea = 0;&#xA;    let moveb = 0;&#xA;    let choicex = [];&#xA;    let caught = true;&#xA;    let ax = 0;&#xA;    let ay = 0;&#xA;&#xA;    for (let k = 0; k &amp;lt;= w - 20; k += 20) {&#xA;        choicex.push(k);&#xA;    }&#xA;&#xA;    function gameLoop() {&#xA;        setTimeout(() =&amp;gt; {&#xA;            requestAnimationFrame(gameLoop);&#xA;            draw();&#xA;        }, 1000 / 8);  // Frame rate of 8&#xA;    }&#xA;&#xA;    function draw() {&#xA;        ctx.clearRect(0, 0, w, h);&#xA;&#xA;        if (start &amp;amp;&amp;amp; !lose) {&#xA;            // Draw/move snake&#xA;            for (let i = 0; i &amp;lt; snake.length; i += 4) {&#xA;                ctx.fillStyle = &#39;rgb(37,89,0)&#39;;&#xA;                snake[i] += snake[i + 2];&#xA;                snake[i + 1] += snake[i + 3];&#xA;&#xA;                if (i === 4) {&#xA;                    movea = snake[i + 2];&#xA;                    moveb = snake[i + 3];&#xA;                    snake[i + 2] = snake[i - 4 + 2];&#xA;                    snake[i + 3] = snake[i - 4 + 3];&#xA;                } else if (i &amp;gt; 4) {&#xA;                    let tempa = snake[i + 2];&#xA;                    let tempb = snake[i + 3];&#xA;                    snake[i + 2] = movea;&#xA;                    snake[i + 3] = moveb;&#xA;                    movea = tempa;&#xA;                    moveb = tempb;&#xA;                }&#xA;&#xA;                ctx.fillRect(snake[i], snake[i + 1], 20, 20);&#xA;            }&#xA;&#xA;            // Apple&#xA;            if (caught) {&#xA;                ax = choicex[Math.floor(Math.random() * choicex.length)];&#xA;                ay = choicex[Math.floor(Math.random() * choicex.length)];&#xA;            }&#xA;&#xA;            caught = false;&#xA;            ctx.fillStyle = &#39;rgb(255,0,0)&#39;;&#xA;            ctx.fillRect(ax, ay, 20, 20);&#xA;&#xA;            if (snake[0] === ax &amp;amp;&amp;amp; snake[1] === ay) {&#xA;                if (snake[snake.length - 4 + 2] === 0 &amp;amp;&amp;amp; snake[snake.length - 4 + 3] === -20) {&#xA;                    snake.push(snake[snake.length - 4], snake[snake.length - 3] + 20, movea, moveb);&#xA;                } else if (snake[snake.length - 4 + 2] === 0 &amp;amp;&amp;amp; snake[snake.length - 4 + 3] === 20) {&#xA;                    snake.push(snake[snake.length - 4], snake[snake.length - 3] - 20, movea, moveb);&#xA;                } else if (snake[snake.length - 4 + 2] === 20 &amp;amp;&amp;amp; snake[snake.length - 4 + 3] === 0) {&#xA;                    snake.push(snake[snake.length - 4] - 20, snake[snake.length - 3], movea, moveb);&#xA;                } else if (snake[snake.length - 4 + 2] === -20 &amp;amp;&amp;amp; snake[snake.length - 4 + 3] === 0) {&#xA;                    snake.push(snake[snake.length - 4] + 20, snake[snake.length - 3], movea, moveb);&#xA;                }&#xA;                caught = true;&#xA;            }&#xA;&#xA;            // Collision detection&#xA;            for (let h = 8; h &amp;lt; snake.length; h += 4) {&#xA;                if (snake[0] === snake[h] &amp;amp;&amp;amp; snake[1] === snake[h + 1]) {&#xA;                    lose = true;&#xA;                }&#xA;            }&#xA;&#xA;            if (snake[0] &amp;lt; 0 || snake[0] &amp;gt;= w || snake[1] &amp;lt; 0 || snake[1] &amp;gt;= h) {&#xA;                lose = true;&#xA;            }&#xA;        }&#xA;&#xA;        // Draw grid&#xA;        ctx.strokeStyle = &#39;rgb(0,0,0)&#39;;&#xA;        for (let j = 20; j &amp;lt; w; j += 20) {&#xA;            ctx.beginPath();&#xA;            ctx.moveTo(0, j);&#xA;            ctx.lineTo(w, j);&#xA;            ctx.stroke();&#xA;            ctx.beginPath();&#xA;            ctx.moveTo(j, 0);&#xA;            ctx.lineTo(j, h);&#xA;            ctx.stroke();&#xA;        }&#xA;&#xA;        // Start screen&#xA;        if (!start) {&#xA;            ctx.fillStyle = &#39;rgb(255,0,0)&#39;;&#xA;            ctx.font = &#39;50px Arial&#39;;&#xA;            ctx.fillText(&#39;Press Enter to play&#39;, w / 6, h / 2);&#xA;        }&#xA;&#xA;        // Game over screen&#xA;        if (lose) {&#xA;            ctx.fillStyle = &#39;rgb(37,89,0)&#39;;&#xA;            for (let g = 0; g &amp;lt; snake.length; g += 4) {&#xA;                ctx.fillRect(snake[g], snake[g + 1], 20, 20);&#xA;            }&#xA;            ctx.fillStyle = &#39;rgb(255,0,0)&#39;;&#xA;            ctx.font = &#39;50px Arial&#39;;&#xA;            ctx.fillText(&#39;GAME OVER&#39;, w / 4.5, h / 2);&#xA;            ctx.fillText(&#39;score: &#39; + (snake.length / 4 - 4), w / 3, h / 1.7);&#xA;        }&#xA;    }&#xA;&#xA;    function keyPressed(event) {&#xA;        const keyCode = event.keyCode;&#xA;&#xA;        if (keyCode === 68) {  // D&#xA;            if (snake[2] !== -20 &amp;amp;&amp;amp; snake[3] !== 0) {&#xA;                snake[2] = d[2];&#xA;                snake[3] = d[3];&#xA;            }&#xA;        }&#xA;&#xA;        if (keyCode === 65) {  // A&#xA;            if (snake[2] !== 20 &amp;amp;&amp;amp; snake[3] !== 0) {&#xA;                snake[2] = d[6];&#xA;                snake[3] = d[7];&#xA;            }&#xA;        }&#xA;&#xA;        if (keyCode === 83) {  // S&#xA;            if (snake[2] !== 0 &amp;amp;&amp;amp; snake[3] !== -20) {&#xA;                snake[2] = d[0];&#xA;                snake[3] = d[1];&#xA;            }&#xA;        }&#xA;&#xA;        if (keyCode === 87) {  // W&#xA;            if (snake[2] !== 0 &amp;amp;&amp;amp; snake[3] !== 20) {&#xA;                snake[2] = d[4];&#xA;                snake[3] = d[5];&#xA;            }&#xA;        }&#xA;&#xA;        if (keyCode === 13) {  // Enter&#xA;            start = true;&#xA;        }&#xA;    }&#xA;&#xA;    document.addEventListener(&#39;keydown&#39;, keyPressed);&#xA;    gameLoop();&#xA;&amp;lt;/script&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;</description>
    </item>
    <item>
      <title>Home</title>
      <link>http://localhost:1313/home/home/</link>
      <pubDate>Sat, 14 Sep 2024 14:15:59 +0000</pubDate>
      <guid>http://localhost:1313/home/home/</guid>
      <description>&lt;h2 id=&#34;side-by-side-images-and-text&#34;&gt;Side by Side Images and Text&lt;/h2&gt;&#xA;&lt;div class=&#34;side-by-side&#34;&gt;&#xA;  &lt;div class=&#34;image&#34;&gt;&#xA;    &lt;img src=&#34;https://photographylife.com/wp-content/uploads/2017/01/Best-of-2016-Nasim-Mansurov-20.jpg&#34; alt=&#34;First Image&#34; /&gt;&#xA;    &lt;p&gt;Caption for the first image.&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;  &lt;div class=&#34;image&#34;&gt;&#xA;    &lt;img src=&#34;http://localhost:1313/img/an2.png&#34; alt=&#34;Second Image&#34; /&gt;&#xA;    &lt;p&gt;Caption for the second image.&lt;/p&gt;&#xA;  &lt;/div&gt;&#xA;&lt;/div&gt;&#xA;&lt;div class=&#34;block-text&#34;&gt;&#xA;  &lt;p&gt;This is a block of text that accompanies the side-by-side images. You can write as much content as you need here, and it will align below the images if the screen is narrow, or to the side if it&#39;s wide enough.&lt;/p&gt;&#xA;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Gallery</title>
      <link>http://localhost:1313/portfolio/gallary/</link>
      <pubDate>Thu, 12 Sep 2024 23:02:56 +0000</pubDate>
      <guid>http://localhost:1313/portfolio/gallary/</guid>
      <description>&lt;!DOCTYPE html&gt;&#xA;&lt;html&gt;&#xA;&lt;head&gt;&#xA;&lt;meta name=&#34;viewport&#34; content=&#34;width=device-width, initial-scale=1&#34;&gt;&#xA;&lt;style&gt;&#xA;.collapsible {&#xA;  background-color: #777;&#xA;  color: white;&#xA;  cursor: pointer;&#xA;  padding: 18px;&#xA;  width: 100%;&#xA;  border: none;&#xA;  text-align: left;&#xA;  outline: none;&#xA;  font-size: 15px;&#xA;}&#xA;&lt;p&gt;.active, .collapsible:hover {&#xA;background-color: #555;&#xA;}&lt;/p&gt;&#xA;&lt;p&gt;.content {&#xA;padding: 0 18px;&#xA;display: none;&#xA;overflow: hidden;&#xA;background-color: #f1f1f1;&#xA;}&#xA;&lt;/style&gt;&lt;/p&gt;&#xA;&lt;/head&gt;&#xA;&lt;body&gt;&#xA;&lt;h2&gt;Proposal Pictures&lt;/h2&gt;&#xA;&lt;p&gt;Click on button to open section&lt;/p&gt;&#xA;&lt;button type=&#34;button&#34; class=&#34;collapsible&#34;&gt;Proposal&lt;/button&gt;&#xA;&lt;div class=&#34;content&#34; style=&#34;display: none;&#34;&gt;&#xA;  &lt;img src=&#34;http://localhost:1313/img/Proposal.png&#34; alt=&#34;Proposal1&#34;&gt;&#xA;  &lt;img src=&#34;http://localhost:1313/img/Proposal2.png&#34; alt=&#34;Proposal2&#34;&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2&gt;Car Pictures&lt;/h2&gt;&#xA;&lt;p&gt;Click on button to open section&lt;/p&gt;&#xA;&lt;button type=&#34;button&#34; class=&#34;collapsible&#34;&gt;Cars&lt;/button&gt;&#xA;&lt;div class=&#34;content&#34; style=&#34;display: none;&#34;&gt;&#xA;  &lt;img src=&#34;http://localhost:1313/img/car1.png&#34; alt=&#34;Car1&#34;&gt;&#xA;  &lt;img src=&#34;http://localhost:1313/img/Car2.png&#34; alt=&#34;Car2&#34;&gt;&#xA;  &lt;img src=&#34;http://localhost:1313/img/Car3.png&#34; alt=&#34;Car3&#34;&gt;&#xA;&lt;/div&gt;&#xA;&lt;h2&gt;Animals Pictures&lt;/h2&gt;&#xA;&lt;p&gt;Click on button to open section&lt;/p&gt;&#xA;&lt;button type=&#34;button&#34; class=&#34;collapsible&#34;&gt;Animals Pictures&lt;/button&gt;&#xA;&lt;div class=&#34;content&#34; style=&#34;display: none;&#34;&gt;&#xA;  &lt;img src=&#34;http://localhost:1313/img/an1.png&#34; alt=&#34;Animals1&#34;&gt;&#xA;  &lt;img src=&#34;http://localhost:1313/img/an2.png&#34; alt=&#34;Animals2&#34;&gt;&#xA;&lt;/div&gt;&#xA;&lt;script&gt;&#xA;var coll = document.getElementsByClassName(&#34;collapsible&#34;);&#xA;var i;&#xA;&#xA;for (i = 0; i &lt; coll.length; i++) {&#xA;  coll[i].addEventListener(&#34;click&#34;, function() {&#xA;    this.classList.toggle(&#34;active&#34;);&#xA;    var content = this.nextElementSibling;&#xA;    if (content.style.display === &#34;block&#34;) {&#xA;      content.style.display = &#34;none&#34;;&#xA;    } else {&#xA;      content.style.display = &#34;block&#34;;&#xA;    }&#xA;  });&#xA;}&#xA;&lt;/script&gt;&#xA;&lt;/body&gt;&#xA;&lt;/html&gt;</description>
    </item>
    <item>
      <title>Test</title>
      <link>http://localhost:1313/portfolio/test/</link>
      <pubDate>Thu, 12 Sep 2024 22:45:27 +0000</pubDate>
      <guid>http://localhost:1313/portfolio/test/</guid>
      <description>&lt;h1 id=&#34;test&#34;&gt;test&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://pbs.twimg.com/media/COgU6YCUcAApmFw.jpg&#34; alt=&#34;funny haha&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>First</title>
      <link>http://localhost:1313/first/</link>
      <pubDate>Tue, 10 Sep 2024 23:40:55 +0000</pubDate>
      <guid>http://localhost:1313/first/</guid>
      <description>&lt;p&gt;Test&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
